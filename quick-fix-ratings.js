// Script r√°pido para corrigir as contagens de avalia√ß√µes
// Execute este script no console da p√°gina debug-ratings.html

async function quickFixRatingCounts() {
    try {
        console.log('üîß Iniciando corre√ß√£o r√°pida das contagens de avalia√ß√µes...');

        if (!window.EsplanadaEatsFirebase || !window.EsplanadaEatsFirebase.firebase) {
            throw new Error('Firebase n√£o inicializado');
        }

        // Import StorageService
        const { StorageService } = await import('./js/services/storage-service.js?v=2.1.0');
        const storageService = new StorageService(window.EsplanadaEatsFirebase.firebase);

        const restaurants = await storageService.getRestaurants();
        console.log(`üìä Processando ${restaurants.length} restaurantes...`);

        let fixedCount = 0;

        for (const restaurant of restaurants) {
            try {
                console.log(`üîß Atualizando: ${restaurant.name} (ID: ${restaurant.id})`);
                await storageService.updateRestaurantAverageRating(restaurant.id);
                fixedCount++;
                console.log(`‚úÖ ${restaurant.name} atualizado com sucesso!`);
            } catch (error) {
                console.error(`‚ùå Erro ao atualizar ${restaurant.name}:`, error.message);
            }
        }

        console.log(`üéâ ${fixedCount} restaurantes atualizados com sucesso!`);
        console.log('üìä Recarregue a p√°gina para ver os resultados atualizados.');

        return fixedCount;

    } catch (error) {
        console.error('‚ùå Erro na corre√ß√£o r√°pida:', error.message);
        return 0;
    }
}

// Executar a corre√ß√£o
quickFixRatingCounts().then(count => {
    console.log(`Corre√ß√£o conclu√≠da! ${count} restaurantes atualizados.`);
});