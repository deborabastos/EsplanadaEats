rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // Helper functions for validation
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 5 * 1024 * 1024 && // 5MB limit
             request.resource.name.matches('^[a-zA-Z0-9-_./]+$') &&
             (request.resource.contentType == 'image/jpeg' ||
              request.resource.contentType == 'image/png' ||
              request.resource.contentType == 'image/webp');
    }

    function isImagePathValid(path) {
      return path.matches('^[a-zA-Z0-9-_./]+$');
    }

    // Restaurant photos - main path used by the application
    match /restaurants/{restaurantId}/photos/{photoId} {
      allow read: if true; // Public read access for photos
      allow write: if isValidImage() && isImagePathValid(request.resource.name);
    }

    // Restaurant photos with user ownership (for future authenticated use)
    match /restaurant-photos/{userId}/{restaurantId}/{photoId} {
      allow read: if true; // Public read access for photos
      allow write: if request.auth != null &&
                    request.auth.uid == userId &&
                    isValidImage() &&
                    isImagePathValid(request.resource.name);
    }

    // Restaurant photos public path (main upload path for anonymous users)
    match /restaurant-photos/public/{restaurantId}/{photoId} {
      allow read: if true; // Public read access for photos
      allow write: if isValidImage() && isImagePathValid(request.resource.name);
    }

    // Temporary public photos path for testing
    match /temp-photos/{photoId} {
      allow read: if true; // Public read access
      allow write: if isValidImage() && isImagePathValid(request.resource.name);
    }

    // Public photos path for fallback
    match /public-photos/{photoId} {
      allow read: if true; // Public read access
      allow write: if isValidImage() && isImagePathValid(request.resource.name);
    }

    // Review photos with user ownership
    match /review-photos/{userId}/{reviewId}/{photoId} {
      allow read: if true; // Public read access for review photos
      allow write: if request.auth != null &&
                    request.auth.uid == userId &&
                    isValidImage() &&
                    isImagePathValid(request.resource.name);
    }

    // General restaurant photos (legacy support)
    match /restaurant-photos/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if request.auth != null &&
                    isValidImage() &&
                    isImagePathValid(request.resource.name);
    }

    // General review photos (legacy support)
    match /review-photos/{allPaths=**} {
      allow read: if true; // Public read access
      allow write: if request.auth != null &&
                    isValidImage() &&
                    isImagePathValid(request.resource.name);
    }

    // Deny access to any other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}